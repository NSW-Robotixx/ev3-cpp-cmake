#ifndef __BITMAPS_HPP__
#define __BITMAPS_HPP__


#include <array>
#include <memory>

namespace finder::physical::display::bitmaps
{
    struct ImageFormat
    {
        unsigned short int width;
        unsigned short int height;
        unsigned short int length;
        const unsigned char* data;
    };

    	namespace Keyboard
	{
		inline const unsigned char letter_z[] = {
			// 'z, 16x16px
			0xff, 0xff, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x8f, 0xf9, 0x80, 0x19, 0x80, 0x31, 0x80, 0xe1, 
			0x83, 0x81, 0x86, 0x01, 0x8c, 0x01, 0x8c, 0x39, 0x87, 0xe1, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_z_image = {
			width: 16, 
			height: 16,
			data: letter_z
		};

		inline const unsigned char letter_y[] = {
			// 'y, 16x16px
			0xff, 0xff, 0x80, 0x01, 0x84, 0x11, 0x86, 0x31, 0x82, 0x21, 0x82, 0x21, 0x83, 0x61, 0x81, 0x41, 
			0x81, 0xc1, 0x80, 0x81, 0x80, 0x81, 0x80, 0x81, 0x80, 0x41, 0x80, 0x41, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_y_image = {
			width: 16, 
			height: 16,
			data: letter_y
		};

		inline const unsigned char letter_x[] = {
		// 'x, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x90, 0x09, 0x98, 0x19, 0x8c, 0x31, 0x86, 0x21, 0x82, 0x41, 0x83, 0xc1, 
		0x81, 0x81, 0x83, 0x81, 0x86, 0xc1, 0x8c, 0x61, 0x88, 0x31, 0x98, 0x11, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_x_image = {
			width: 16, 
			height: 16,
			data: letter_x
		};

		inline const unsigned char letter_w[] = {
		// 'w, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x80, 0x01, 0x90, 0x09, 0x90, 0x19, 0x88, 0x11, 0x89, 0x91, 0x89, 0x91, 
		0x89, 0x91, 0x8d, 0xa1, 0x87, 0xa1, 0x86, 0xe1, 0x84, 0x01, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_w_image = {
			width: 16, 
			height: 16,
			data: letter_w
		};
		
		inline const unsigned char letter_v[] = {
		// 'v, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x80, 0x01, 0x98, 0x21, 0x88, 0x61, 0x88, 0x41, 0x88, 0x41, 0x84, 0xc1, 
		0x84, 0x81, 0x86, 0x81, 0x82, 0x81, 0x83, 0x01, 0x81, 0x01, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_v_image = {
			width: 16, 
			height: 16,
			data: letter_v
		};
		
		inline const unsigned char letter_u[] = {
		// 'u, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x80, 0x01, 0x84, 0x19, 0x84, 0x09, 0x84, 0x09, 0x84, 0x09, 0x84, 0x09, 
		0x84, 0x09, 0x84, 0x11, 0x86, 0x11, 0x83, 0x31, 0x81, 0xe1, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_u_image = {
			width: 16, 
			height: 16,
			data: letter_u
		};
		
		inline const unsigned char letter_t[] = {
		// 't, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x80, 0x19, 0x80, 0xf1, 0x9f, 0x81, 0x81, 0x81, 0x80, 0x81, 0x80, 0x81, 
		0x80, 0x81, 0x80, 0x81, 0x80, 0x81, 0x80, 0x81, 0x81, 0x81, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_t_image = {
			width: 16, 
			height: 16,
			data: letter_t
		};
		
		inline const unsigned char letter_s[] = {
		// 's, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x80, 0xf1, 0x83, 0x91, 0x86, 0x01, 0x8c, 0x01, 0x88, 0x01, 0x8c, 0x01, 
		0x87, 0xc1, 0x80, 0x21, 0x80, 0x21, 0x90, 0x31, 0x9f, 0xe1, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_s_image = {
			width: 16, 
			height: 16,
			data: letter_s
		};
		
		inline const unsigned char letter_r[] = {
		// 'r, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x8f, 0x81, 0x88, 0xc1, 0x88, 0x41, 0x88, 0x61, 0x8b, 0xc1, 0x8f, 0x01, 
		0x89, 0x01, 0x88, 0x81, 0x88, 0xc1, 0x88, 0x61, 0x88, 0x21, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_r_image = {
			width: 16, 
			height: 16,
			data: letter_r
		};
		
		inline const unsigned char letter_q[] = {
		// 'q, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x81, 0xc1, 0x87, 0xb1, 0x8c, 0x11, 0x88, 0x11, 0x98, 0x11, 0x90, 0x11, 
		0x90, 0xd1, 0x98, 0x71, 0x88, 0x31, 0x8c, 0x39, 0x87, 0xed, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_q_image = {
			width: 16, 
			height: 16,
			data: letter_q
		};
		
		inline const unsigned char letter_p[] = {
		// 'p, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x8f, 0x01, 0x89, 0x81, 0x88, 0x81, 0x88, 0xc1, 0x88, 0x41, 0x8c, 0xc1, 
		0x8f, 0x01, 0x88, 0x01, 0x88, 0x01, 0x88, 0x01, 0x88, 0x01, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_p_image = {
			width: 16, 
			height: 16,
			data: letter_p
		};
		
		inline const unsigned char letter_o[] = {
		// 'o, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x80, 0x01, 0x81, 0xc1, 0x83, 0x31, 0x86, 0x11, 0x84, 0x19, 0x88, 0x09, 
		0x88, 0x09, 0x88, 0x19, 0x8c, 0x11, 0x86, 0x71, 0x83, 0xc1, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_o_image = {
			width: 16, 
			height: 16,
			data: letter_o
		};
		
		inline const unsigned char letter_n[] = {
		// 'n, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x80, 0x01, 0x86, 0x09, 0x86, 0x09, 0x86, 0x19, 0x8e, 0x11, 0x89, 0x11, 
		0x89, 0x11, 0x89, 0xb1, 0x98, 0xa1, 0x90, 0xa1, 0x90, 0xe1, 0x90, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_n_image = {
			width: 16, 
			height: 16,
			data: letter_n
		};
		
		inline const unsigned char letter_m[] = {
		// 'm, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x82, 0x21, 0x86, 0x71, 0x86, 0xd1, 0x8e, 0x91, 
		0x8b, 0x91, 0x89, 0x11, 0x98, 0x09, 0x90, 0x09, 0x90, 0x09, 0x90, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_m_image = {
			width: 16, 
			height: 16,
			data: letter_m
		};
		
		inline const unsigned char letter_l[] = {
		// 'l, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x84, 0x01, 0x84, 0x01, 0x84, 0x01, 0x84, 0x01, 0x84, 0x01, 0x84, 0x01, 
		0x84, 0x01, 0x84, 0x01, 0x84, 0x01, 0x84, 0x01, 0x84, 0x01, 0x87, 0xf1, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_l_image = {
			width: 16, 
			height: 16,
			data: letter_l
		};
		
		inline const unsigned char letter_k[] = {
		// 'k, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x84, 0x31, 0x84, 0x21, 0x84, 0x41, 0x84, 0xc1, 0x85, 0x81, 0x85, 0x01, 
		0x87, 0x01, 0x87, 0x01, 0x85, 0xc1, 0x84, 0x61, 0x84, 0x31, 0x84, 0x11, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_k_image = {
			width: 16, 
			height: 16,
			data: letter_k
		};
		
		inline const unsigned char letter_i[] = {
		// 'i, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x8f, 0xf1, 0x81, 0x01, 0x81, 0x01, 0x81, 0x01, 0x81, 0x01, 0x81, 0x01, 
		0x81, 0x01, 0x81, 0x01, 0x81, 0x01, 0x81, 0x01, 0x8f, 0xf1, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_i_image = {
			width: 16, 
			height: 16,
			data: letter_i
		};
		
		inline const unsigned char letter_j[] = {
		// 'j, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x80, 0x01, 0x8f, 0xf9, 0x80, 0x81, 0x80, 0xc1, 0x80, 0x41, 0x80, 0x41, 
		0x80, 0x41, 0x88, 0x41, 0x88, 0x41, 0x88, 0xc1, 0x8f, 0x81, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_j_image = {
			width: 16, 
			height: 16,
			data: letter_j
		};
		
		inline const unsigned char letter_h[] = {
		// 'h, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x88, 0x21, 0x88, 0x21, 0x88, 0x21, 0x88, 0x21, 0x88, 0x61, 0x8f, 0xe1, 
		0x88, 0x21, 0x88, 0x21, 0x88, 0x21, 0x88, 0x21, 0x88, 0x21, 0x88, 0x21, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_h_image = {
			width: 16, 
			height: 16,
			data: letter_h
		};
		
		inline const unsigned char letter_g[] = {
		// 'g, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x80, 0xe1, 0x83, 0xa1, 0x86, 0x01, 0x8c, 0x01, 0x88, 0x01, 0x98, 0x01, 
		0x90, 0x01, 0x90, 0xf9, 0x98, 0x39, 0x8c, 0x39, 0x87, 0xe9, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_g_image = {
			width: 16, 
			height: 16,
			data: letter_g
		};
		
		inline const unsigned char letter_f[] = {
		// 'f, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x8f, 0xf1, 0x88, 0x01, 0x88, 0x01, 0x88, 0x01, 0x8f, 0x81, 0x88, 0x01, 
		0x88, 0x01, 0x88, 0x01, 0x88, 0x01, 0x88, 0x01, 0x88, 0x01, 0x88, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_f_image = {
			width: 16, 
			height: 16,
			data: letter_f
		};
		
		inline const unsigned char letter_e[] = {
		// 'e, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x8f, 0xe1, 0x88, 0x01, 0x88, 0x01, 0x88, 0x01, 0x88, 0x01, 0x8f, 0xc1, 
		0x88, 0x01, 0x88, 0x01, 0x88, 0x01, 0x88, 0x01, 0x88, 0x01, 0x8f, 0xe1, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_e_image = {
			width: 16, 
			height: 16,
			data: letter_e
		};
		
		inline const unsigned char letter_d[] = {
		// 'd, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x80, 0x01, 0x8f, 0x81, 0x88, 0xc1, 0x88, 0x61, 0x88, 0x21, 0x88, 0x21, 
		0x88, 0x21, 0x88, 0x21, 0x88, 0x61, 0x89, 0xc1, 0x8f, 0x01, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_d_image = {
			width: 16, 
			height: 16,
			data: letter_d
		};
		
		inline const unsigned char letter_c[] = {
		// 'c, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x80, 0x01, 0x81, 0xc1, 0x83, 0x01, 0x84, 0x01, 0x88, 0x01, 0x88, 0x01, 
		0x88, 0x01, 0x88, 0x01, 0x8c, 0x01, 0x86, 0x01, 0x83, 0xf1, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_c_image = {
			width: 16, 
			height: 16,
			data: letter_c
		};
		
		inline const unsigned char letter_b[] = {
		// 'b, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x8f, 0x01, 0x89, 0x81, 0x88, 0xc1, 0x88, 0x41, 0x89, 0x81, 0x8f, 0x81, 
		0x88, 0x41, 0x88, 0x61, 0x88, 0x21, 0x88, 0x61, 0x8f, 0xc1, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff, 
		};

		inline ImageFormat letter_b_image = {
			width: 16, 
			height: 16,
			data: letter_b
		};
		
		inline const unsigned char letter_a[] = {
		// 'a, 16x16px
		0xff, 0xff, 0x80, 0x01, 0x80, 0x81, 0x81, 0xc1, 0x81, 0x41, 0x83, 0x41, 0x82, 0x61, 0x82, 0x21, 
		0x86, 0x31, 0x87, 0xf1, 0x8c, 0x11, 0x88, 0x19, 0x98, 0x09, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff
		};

		inline ImageFormat letter_a_image = {
			width: 16, 
			height: 16,
			data: letter_a
		};
		
		inline std::array<std::shared_ptr<ImageFormat>, 26> Keyboard_images = {
			std::shared_ptr<ImageFormat>(&letter_a_image),
			std::shared_ptr<ImageFormat>(&letter_b_image),
			std::shared_ptr<ImageFormat>(&letter_c_image),
			std::shared_ptr<ImageFormat>(&letter_d_image),
			std::shared_ptr<ImageFormat>(&letter_e_image),
			std::shared_ptr<ImageFormat>(&letter_f_image),
			std::shared_ptr<ImageFormat>(&letter_g_image),
			std::shared_ptr<ImageFormat>(&letter_h_image),
			std::shared_ptr<ImageFormat>(&letter_i_image),
			std::shared_ptr<ImageFormat>(&letter_j_image),
			std::shared_ptr<ImageFormat>(&letter_k_image),
			std::shared_ptr<ImageFormat>(&letter_l_image),
			std::shared_ptr<ImageFormat>(&letter_m_image),
			std::shared_ptr<ImageFormat>(&letter_n_image),
			std::shared_ptr<ImageFormat>(&letter_o_image),
			std::shared_ptr<ImageFormat>(&letter_p_image),
			std::shared_ptr<ImageFormat>(&letter_q_image),
			std::shared_ptr<ImageFormat>(&letter_r_image),
			std::shared_ptr<ImageFormat>(&letter_s_image),
			std::shared_ptr<ImageFormat>(&letter_t_image),
			std::shared_ptr<ImageFormat>(&letter_u_image),
			std::shared_ptr<ImageFormat>(&letter_v_image),
			std::shared_ptr<ImageFormat>(&letter_w_image),
			std::shared_ptr<ImageFormat>(&letter_x_image),
			std::shared_ptr<ImageFormat>(&letter_y_image),
			std::shared_ptr<ImageFormat>(&letter_z_image)
		};
	} // namespace Keyboard
} // namespace finder::physical::display::bitmaps

#endif // __BITMAPS_HPP__